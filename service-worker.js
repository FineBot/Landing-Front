// Set this to true for production
var doCache = true;

// THIS MESSAGE FOR PARSER #name
var CACHE_NAME = 'v55';

// Delete old caches that are not our current one!
self.addEventListener("activate", event => {
  const cacheWhitelist = [CACHE_NAME];
  event.waitUntil(
    caches.keys()
      .then(keyList =>
        Promise.all(keyList.map(key => {
          if (!cacheWhitelist.includes(key)) {
            console.log('Deleting cache: ' + key)
            return caches.delete(key);
          }
        }))
      )
  );
});

// The first time the user starts up the PWA, 'install' is triggered.
self.addEventListener('install', function(event) {
  if (doCache) {
    event.waitUntil(
      caches.open(CACHE_NAME)
        .then(function(cache) {
          // Get the assets manifest so we can see what our js file is named
          // This is because webpack hashes it
          fetch("asset-manifest.json")
            .then(response => {
              response.json()
            })
            .then(assets => {
              // Open a cache and cache our files
              // We want to cache the page and the main.js generated by webpack
              // We could also cache any static assets like CSS or images
              const urlsToCache = [
              "/about.b545a31b.js",
							"/about.b545a31b.js.map",
							"/achievementPageTemplate.7af4696f.css",
							"/achievementPageTemplate.7af4696f.css.map",
							"/achievementPageTemplate.b35240bb.js",
							"/achievementPageTemplate.b35240bb.js.map",
							"/achievements/somepage.html",
							"/achievements.680a2853.js",
							"/achievements.680a2853.js.map",
							"/background.3f68f1c2.webp",
							"/backgroundCompressed.f260016c.webp",
							"/buttonArrow.bee17f8b.svg",
							"/favicon.ace74d0b.ico",
							"/footerBackground.7daac8ef.webp",
							"/github.9fc9ee1d.webp",
							"/header.810d2277.js",
							"/header.810d2277.js.map",
							"/hololens.9ff0cc34.webp",
							"/htc_vive.11570995.webp",
							"/indexStyles.d6935bd5.css",
							"/indexStyles.d6935bd5.css.map",
							"/logo.4b49469b.png",
							"/logo.ae2758bd.svg",
							"/logo.b1d448d9.webp",
							"/projectPageTemplate.42fb585e.js",
							"/projectPageTemplate.42fb585e.js.map",
							"/projectPageTemplate.64238217.css",
							"/projectPageTemplate.64238217.css.map",
							"/projects/artillery.html",
							"/projects/bunnyhuntvr_-_web_vr_шутер.html",
							"/projects/geohelper.html",
							"/projects/gyroball.html",
							"/projects/itlab_(система_управления_лабораторией).html",
							"/projects/microfileserver_(файловый_сервер_для_небольших_файлов).html",
							"/projects/plane_crash_simulator.html",
							"/projects/vrtherapy_-_приложение_для_релаксации_в_vr_со_множеством_разнообразных_активностей.html",
							"/projects/виртуальный_ситуационный_центр.html",
							"/projects/зил.html",
							"/projects/многопользовательская_сборка_ракетного_двигателя.html",
							"/projects/шутер_в_виртуальной_реальности.html",
							"/projects.01086603.css",
							"/projects.01086603.css.map",
							"/projects.dce65aa1.js",
							"/projects.dce65aa1.js.map",
							"/service-worker.js.map",
							"/staff.c15ef57b.js",
							"/staff.c15ef57b.js.map",
							"/styles.1d1433e9.css",
							"/styles.1d1433e9.css.map",
							"/styles.43573105.js",
							"/styles.43573105.js.map",
							"/vk.d333629c.webp",
							"/youtube.64d5f984.webp",
							"/__/manifest.js",
							"/"
              ]
              cache.addAll(urlsToCache)
              console.log('cached');
            })
        })
    );
  }
});

// When the webpage goes to fetch files, we intercept that request and serve up the matching files
// if we have them
self.addEventListener('fetch', function(event) {
  if (doCache) {
    event.respondWith(
      caches.match(event.request).then(function(response) {
        return response || fetch(event.request);
      })
    );
  }
});
